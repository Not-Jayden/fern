/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernDefinition from "../../../../api/index";
import * as core from "../../../../core";
import { BaseTypeReferenceSchema } from "./BaseTypeReferenceSchema";
import { WithName } from "../../commons/types/WithName";
import { WithAudiences } from "../../commons/types/WithAudiences";

export const InlinedListTypeReferenceSchema: core.serialization.ObjectSchema<
    serializers.InlinedListTypeReferenceSchema.Raw,
    FernDefinition.InlinedListTypeReferenceSchema
> = core.serialization
    .object({
        type: core.serialization.string(),
        optional: core.serialization.boolean().optional(),
        value: core.serialization.lazy(() => serializers.InlinedTypeDeclaration),
    })
    .extend(BaseTypeReferenceSchema)
    .extend(WithName)
    .extend(WithAudiences);

export declare namespace InlinedListTypeReferenceSchema {
    interface Raw extends BaseTypeReferenceSchema.Raw, WithName.Raw, WithAudiences.Raw {
        type: string;
        optional?: boolean | null;
        value: serializers.InlinedTypeDeclaration.Raw;
    }
}
